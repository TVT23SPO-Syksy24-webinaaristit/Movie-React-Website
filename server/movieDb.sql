-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.accounts
(
    idaccount bigserial NOT NULL,
    username character varying(45) NOT NULL,
    email character varying(255) NOT NULL,
    password character varying(255) NOT NULL,
    PRIMARY KEY (idaccount)
        INCLUDE(idaccount)
);

CREATE TABLE IF NOT EXISTS public.groups
(
    idgroup bigserial NOT NULL,
    group_name character varying(45) NOT NULL,
    group_description text,
    owner integer NOT NULL,
    member_count integer NOT NULL,
    PRIMARY KEY (idgroup)
        INCLUDE(idgroup)
);

CREATE TABLE IF NOT EXISTS public.group_members
(
    accounts_idaccount integer NOT NULL,
    groups_idgroup integer NOT NULL,
    group_request_timestamp timestamp with time zone,
    is_a_member bit NOT NULL,
    join_date_timestamp timestamp with time zone,
    PRIMARY KEY (accounts_idaccount, groups_idgroup)
);

CREATE TABLE IF NOT EXISTS public.reviews
(
    idreview bigserial NOT NULL,
    idmovie integer NOT NULL,
    review_text text NOT NULL,
    review_points smallint NOT NULL,
    review_creation_timestamp timestamp with time zone NOT NULL,
    accounts_idaccount integer NOT NULL,
    PRIMARY KEY (idreview, accounts_idaccount)
);

CREATE TABLE IF NOT EXISTS public.favorites
(
    idfavorite bigserial NOT NULL,
    idmovie integer NOT NULL,
    poster_url character varying(255) NOT NULL,
    title character varying(255) NOT NULL,
    accounts_idaccount integer NOT NULL,
    PRIMARY KEY (idfavorite, accounts_idaccount)
);

CREATE TABLE IF NOT EXISTS public.group_highlights
(
    idgroup_highlight bigserial NOT NULL,
    poster_url character varying(255) NOT NULL,
    title character varying(255) NOT NULL,
    idmovie_or_event integer NOT NULL,
    description text NOT NULL,
    source_link_url character varying(255) NOT NULL,
    highlight_creation_timestamp timestamp with time zone NOT NULL,
    accounts_idaccount integer NOT NULL,
    groups_idgroup integer NOT NULL,
    PRIMARY KEY (idgroup_highlight, accounts_idaccount, groups_idgroup)
);

ALTER TABLE IF EXISTS public.groups
    ADD FOREIGN KEY (owner)
    REFERENCES public.accounts (idaccount) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.group_members
    ADD FOREIGN KEY (accounts_idaccount)
    REFERENCES public.accounts (idaccount) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.group_members
    ADD FOREIGN KEY (groups_idgroup)
    REFERENCES public.groups (idgroup) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.reviews
    ADD FOREIGN KEY (accounts_idaccount)
    REFERENCES public.accounts (idaccount) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.favorites
    ADD FOREIGN KEY (accounts_idaccount)
    REFERENCES public.accounts (idaccount) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.group_highlights
    ADD FOREIGN KEY (accounts_idaccount)
    REFERENCES public.accounts (idaccount) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.group_highlights
    ADD FOREIGN KEY (groups_idgroup)
    REFERENCES public.groups (idgroup) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;